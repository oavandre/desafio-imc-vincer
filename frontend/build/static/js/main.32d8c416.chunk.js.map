{"version":3,"sources":["components/navbar.component.js","components/imc-list.component.js","components/edit-imc.component.js","components/create-imc.component.js","components/create-genero.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Imc","props","imc","genero","altura","massa","valor","ImcList","deleteImc","bind","state","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","_id","map","currentimc","key","imcList","EditImc","onChangeGenero","onChangeAltura","onChangeMassa","onChangeValor","onSubmit","generos","match","params","length","e","target","value","preventDefault","post","res","window","location","ref","required","onChange","type","CreateIMC","CreateGenero","App","path","exact","component","IMCList","EditIMC","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.32d8c416.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">ExcerTracker</Link>\n        <div className=\"collpase navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"navbar-item\">\n          <Link to=\"/\" className=\"nav-link\">IMC</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/create\" className=\"nav-link\">Cadastrar IMC</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/genero\" className=\"nav-link\">Cadastrar novo Genero</Link>\n          </li>\n        </ul>\n        </div>\n      </nav>\n    );\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Imc = props => (\n  <tr>\n    <td>{props.imc.genero}</td>\n    <td>{props.imc.altura}</td>\n    <td>{props.imc.massa}</td>\n    <td>{props.imc.valor}</td>\n\n  </tr>\n)\n\nexport default class ImcList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteImc = this.deleteImc.bind(this)\n\n    this.state = {imc: []};\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/imc/')\n      .then(response => {\n        this.setState({ imc: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  deleteExercise(id) {\n    axios.delete('http://localhost:5000/imc/'+id)\n      .then(response => { console.log(response.data)});\n\n    this.setState({\n      imc: this.state.imc.filter(el => el._id !== id)\n    })\n  }\n\n  imcList() {\n    return this.state.imc.map(currentimc => {\n      return <Imc imc={currentimc} deleteImc={this.deleteImc} key={currentimc._id}/>;\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>IMC</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Genero</th>\n              <th>Altura</th>\n              <th>Peso</th>\n              <th>Valor</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.imcList() }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditImc extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeGenero = this.onChangeGenero.bind(this);\n    this.onChangeAltura = this.onChangeAltura.bind(this);\n    this.onChangeMassa  = this.onChangeMassa.bind(this);\n    this.onChangeValor  = this.onChangeValor.bind(this);\n    this.onSubmit       = this.onSubmit.bind(this);\n\n\n    this.state = {\n      genero: '',\n      altura: 0,\n      massa: 0,\n      valor: 0,\n      generos: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/imc/'+this.props.match.params.id)\n      .then(response => {\n        this.setState({\n            genero: response.data.genero,\n            altura: response.data.altura,\n            massa: response.data.massa,\n            valor: response.data.valor\n        })   \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    axios.get('http://localhost:5000/genero/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            generos: response.data.map(genero => genero.genero),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  onChangeGenero(e) {\n    this.setState({\n        genero: e.target.value\n    })\n  }\n\n  onChangeAltura(e) {\n    this.setState({\n      altura: e.target.value\n    })\n  }\n\n  onChangeMassa(e) {\n    this.setState({\n      massa: e.target.value\n    })\n  }\n\n  onChangeValor(e) {\n    this.setState({\n        valor: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const imc = {\n        genero: this.state.genero,\n        altura: this.state.altura,\n        massa: this.state.massa,\n        valor: this.state.valor\n    }\n\n    console.log(imc);\n\n    axios.post('http://localhost:5000/imc/update/' + this.props.match.params.id, imc)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Edit Exercise Log</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Genero: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.genero}\n              onChange={this.onChangeGenero}>\n              {\n                this.state.generos.map(function(genero) {\n                  return <option \n                    key={genero}\n                    value={genero}>{genero}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n        <div className=\"form-group\"> \n          <label>Altura: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.altura}\n              onChange={this.onChangeAltura}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Peso: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.massa}\n              onChange={this.onChangeMassa}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Valor: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.valor}\n              onChange={this.onChangeValor}\n              />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Editar IMC\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n//import DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateIMC extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeGenero = this.onChangeGenero.bind(this);\n    this.onChangeAltura = this.onChangeAltura.bind(this);\n    this.onChangeMassa = this.onChangeMassa.bind(this);\n    this.onChangeValor = this.onChangeValor.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n        genero: '',\n        altura: 0,\n        massa: 0,\n        valor: 0,\n        generos: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/genero/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            generos: response.data.map(genero => genero.genero),\n            genero: response.data[0].genero\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\n  onChangeGenero(e) {\n    this.setState({\n      genero: e.target.value\n    })\n  }\n\n  onChangeAltura(e) {\n    this.setState({\n      altura: e.target.value\n    })\n  }\n\n  onChangeMassa(e) {\n    this.setState({\n      massa: e.target.value\n    })\n  }\n\n  onChangeValor(e) {\n    this.setState({\n        valor: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const imc = {\n        genero: this.state.genero,\n        altura: this.state.altura,\n        massa: this.state.massa,\n        valor: this.state.valor\n    }\n\n    console.log(imc);\n\n    axios.post('http://localhost:5000/imc/add', imc)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Adicionar um novo IMC</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\"> \n          <label>Genero: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.genero}\n              onChange={this.onChangeGenero}>\n              {\n                this.state.generos.map(function(genero) {\n                  return <option \n                    key={genero}\n                    value={genero}>{genero}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n        <div className=\"form-group\"> \n          <label>Altura: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.altura}\n              onChange={this.onChangeAltura}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Peso: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.massa}\n              onChange={this.onChangeMassa}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Valor: </label>\n          <input \n              type=\"text\" \n              className=\"form-control\"\n              value={this.state.valor}\n              onChange={this.onChangeValor}\n              />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateGenero extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeGenero = this.onChangeGenero.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      genero: ''\n    }\n  }\n\n  onChangeGenero(e) {\n    this.setState({\n      genero: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const genero = {\n      genero: this.state.genero\n    }\n\n    console.log(genero);\n\n    axios.post('http://localhost:5000/genero/add', genero)\n      .then(res => console.log(res.data));\n\n    this.setState({\n      genero: ''\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Adicionar um novo Genero</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Genero: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.genero}\n                onChange={this.onChangeGenero}\n                />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Criar Genero\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar.component\"\nimport IMCList from \"./components/imc-list.component\";\nimport EditIMC from \"./components/edit-imc.component\";\nimport CreateIMC from \"./components/create-imc.component\";\nimport CreateGenero from \"./components/create-genero.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n      <Navbar />\n      <br/>\n      <Route path=\"/\" exact component={IMCList} />\n      <Route path=\"/edit/:id\" component={EditIMC} />\n      <Route path=\"/create\" component={CreateIMC} />\n      <Route path=\"/genero\" component={CreateGenero} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}